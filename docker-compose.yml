version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: kanban-postgres
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: kanban_crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 753951
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/setup-postgres.sql:/docker-entrypoint-initdb.d/setup.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d kanban_crm"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache de alta performance
  redis:
    image: redis:7-alpine
    container_name: kanban-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=753951
    command: redis-server --requirepass 753951
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "753951", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Opcional: pgAdmin para administração visual
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kanban-pgadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kanban.local
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  default:
    name: kanban-network
