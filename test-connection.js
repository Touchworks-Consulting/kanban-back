require('dotenv').config();
const { Client } = require('pg');

async function testConnection() {
  console.log('üîç Testando configura√ß√µes de conex√£o...');
  console.log(`   Host: ${process.env.DB_HOST}`);
  console.log(`   Port: ${process.env.DB_PORT}`);
  console.log(`   Database: ${process.env.DB_NAME}`);
  console.log(`   User: ${process.env.DB_USER}`);
  console.log(`   Password: ${process.env.DB_PASSWORD ? '***' : 'n√£o definida'}`);
  console.log('');

  // Teste 1: Conex√£o com banco padr√£o
  console.log('üì° Teste 1: Conectando ao PostgreSQL...');
  const client = new Client({
    host: process.env.DB_HOST || 'localhost',
    port: process.env.DB_PORT || 5432,
    user: process.env.DB_USER || 'postgres',
    password: process.env.DB_PASSWORD || 'postgres',
    database: 'postgres' // usar banco padr√£o primeiro
  });

  try {
    await client.connect();
    console.log('‚úÖ Conex√£o com PostgreSQL estabelecida!');
    
    // Verificar se o banco existe
    const result = await client.query(`
      SELECT 1 FROM pg_database WHERE datname = $1
    `, [process.env.DB_NAME || 'kanban_crm']);
    
    if (result.rows.length > 0) {
      console.log(`‚úÖ Banco '${process.env.DB_NAME}' j√° existe!`);
    } else {
      console.log(`‚ö†Ô∏è Banco '${process.env.DB_NAME}' n√£o existe, criando...`);
      await client.query(`CREATE DATABASE ${process.env.DB_NAME || 'kanban_crm'}`);
      console.log(`‚úÖ Banco '${process.env.DB_NAME}' criado!`);
    }
    
    await client.end();
    
  } catch (error) {
    console.error('‚ùå Erro na conex√£o:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.error('üí° PostgreSQL n√£o est√° rodando ou n√£o est√° acess√≠vel na porta 5432');
    } else if (error.code === '28P01') {
      console.error('üí° Erro de autentica√ß√£o - verifique usu√°rio/senha');
    }
    
    process.exit(1);
  }
  
  // Teste 2: Conex√£o com o banco do projeto
  console.log('\nüì° Teste 2: Conectando ao banco do projeto...');
  const projectClient = new Client({
    host: process.env.DB_HOST || 'localhost',
    port: process.env.DB_PORT || 5432,
    user: process.env.DB_USER || 'postgres',
    password: process.env.DB_PASSWORD || 'postgres',
    database: process.env.DB_NAME || 'kanban_crm'
  });

  try {
    await projectClient.connect();
    console.log('‚úÖ Conex√£o com banco do projeto estabelecida!');
    
    // Verificar vers√£o
    const versionResult = await projectClient.query('SELECT version()');
    console.log(`üìä PostgreSQL: ${versionResult.rows[0].version.split(' ')[0]} ${versionResult.rows[0].version.split(' ')[1]}`);
    
    await projectClient.end();
    console.log('\nüéâ Todas as conex√µes funcionaram! Voc√™ pode executar as migra√ß√µes.');
    
  } catch (error) {
    console.error('‚ùå Erro na conex√£o com banco do projeto:', error.message);
    process.exit(1);
  }
}

testConnection();